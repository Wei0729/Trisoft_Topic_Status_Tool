'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.34209
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports System
Imports System.ComponentModel
Imports System.Diagnostics
Imports System.Web.Services
Imports System.Web.Services.Protocols
Imports System.Xml.Serialization

'
'This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.34209.
'
Namespace Publication20
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Web.Services.WebServiceBindingAttribute(Name:="Publication20Soap", [Namespace]:="urn:trisoft.be:WebServices:InfoShare:Publication:2.0")>  _
    Partial Public Class Publication20
        Inherits System.Web.Services.Protocols.SoapHttpClientProtocol
        
        Private CreateOperationCompleted As System.Threading.SendOrPostCallback
        
        Private DeleteOperationCompleted As System.Threading.SendOrPostCallback
        
        Private SetMetaDataOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetMetaDataOperationCompleted As System.Threading.SendOrPostCallback
        
        Private FindOperationCompleted As System.Threading.SendOrPostCallback
        
        Private RetrieveMetaDataOperationCompleted As System.Threading.SendOrPostCallback
        
        Private IsReleasedOperationCompleted As System.Threading.SendOrPostCallback
        
        Private useDefaultCredentialsSetExplicitly As Boolean
        
        '''<remarks/>
        Public Sub New()
            MyBase.New
            Me.Url = Global.Esri_Trisoft_TopicStatus_Tool.My.MySettings.Default.Esri_Trisoft_TopicStatus_Tool_Publication20_Publication20
            If (Me.IsLocalFileSystemWebService(Me.Url) = true) Then
                Me.UseDefaultCredentials = true
                Me.useDefaultCredentialsSetExplicitly = false
            Else
                Me.useDefaultCredentialsSetExplicitly = true
            End If
        End Sub
        
        Public Shadows Property Url() As String
            Get
                Return MyBase.Url
            End Get
            Set
                If (((Me.IsLocalFileSystemWebService(MyBase.Url) = true)  _
                            AndAlso (Me.useDefaultCredentialsSetExplicitly = false))  _
                            AndAlso (Me.IsLocalFileSystemWebService(value) = false)) Then
                    MyBase.UseDefaultCredentials = false
                End If
                MyBase.Url = value
            End Set
        End Property
        
        Public Shadows Property UseDefaultCredentials() As Boolean
            Get
                Return MyBase.UseDefaultCredentials
            End Get
            Set
                MyBase.UseDefaultCredentials = value
                Me.useDefaultCredentialsSetExplicitly = true
            End Set
        End Property
        
        '''<remarks/>
        Public Event CreateCompleted As CreateCompletedEventHandler
        
        '''<remarks/>
        Public Event DeleteCompleted As DeleteCompletedEventHandler
        
        '''<remarks/>
        Public Event SetMetaDataCompleted As SetMetaDataCompletedEventHandler
        
        '''<remarks/>
        Public Event GetMetaDataCompleted As GetMetaDataCompletedEventHandler
        
        '''<remarks/>
        Public Event FindCompleted As FindCompletedEventHandler
        
        '''<remarks/>
        Public Event RetrieveMetaDataCompleted As RetrieveMetaDataCompletedEventHandler
        
        '''<remarks/>
        Public Event IsReleasedCompleted As IsReleasedCompletedEventHandler
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:trisoft.be:WebServices:InfoShare:Publication:2.0/Create", RequestNamespace:="urn:trisoft.be:WebServices:InfoShare:Publication:2.0", ResponseNamespace:="urn:trisoft.be:WebServices:InfoShare:Publication:2.0", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Create(ByRef psAuthContext As String, ByVal psFolderId As String, ByRef psDocId As String, ByRef psVersion As String, ByVal psXMLMetaData As String) As String
            Dim results() As Object = Me.Invoke("Create", New Object() {psAuthContext, psFolderId, psDocId, psVersion, psXMLMetaData})
            psAuthContext = CType(results(1),String)
            psDocId = CType(results(2),String)
            psVersion = CType(results(3),String)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub CreateAsync(ByVal psAuthContext As String, ByVal psFolderId As String, ByVal psDocId As String, ByVal psVersion As String, ByVal psXMLMetaData As String)
            Me.CreateAsync(psAuthContext, psFolderId, psDocId, psVersion, psXMLMetaData, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CreateAsync(ByVal psAuthContext As String, ByVal psFolderId As String, ByVal psDocId As String, ByVal psVersion As String, ByVal psXMLMetaData As String, ByVal userState As Object)
            If (Me.CreateOperationCompleted Is Nothing) Then
                Me.CreateOperationCompleted = AddressOf Me.OnCreateOperationCompleted
            End If
            Me.InvokeAsync("Create", New Object() {psAuthContext, psFolderId, psDocId, psVersion, psXMLMetaData}, Me.CreateOperationCompleted, userState)
        End Sub
        
        Private Sub OnCreateOperationCompleted(ByVal arg As Object)
            If (Not (Me.CreateCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CreateCompleted(Me, New CreateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:trisoft.be:WebServices:InfoShare:Publication:2.0/Delete", RequestNamespace:="urn:trisoft.be:WebServices:InfoShare:Publication:2.0", ResponseNamespace:="urn:trisoft.be:WebServices:InfoShare:Publication:2.0", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Delete(ByRef psAuthContext As String, ByVal psDocId As String, ByVal psVersion As String) As String
            Dim results() As Object = Me.Invoke("Delete", New Object() {psAuthContext, psDocId, psVersion})
            psAuthContext = CType(results(1),String)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub DeleteAsync(ByVal psAuthContext As String, ByVal psDocId As String, ByVal psVersion As String)
            Me.DeleteAsync(psAuthContext, psDocId, psVersion, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub DeleteAsync(ByVal psAuthContext As String, ByVal psDocId As String, ByVal psVersion As String, ByVal userState As Object)
            If (Me.DeleteOperationCompleted Is Nothing) Then
                Me.DeleteOperationCompleted = AddressOf Me.OnDeleteOperationCompleted
            End If
            Me.InvokeAsync("Delete", New Object() {psAuthContext, psDocId, psVersion}, Me.DeleteOperationCompleted, userState)
        End Sub
        
        Private Sub OnDeleteOperationCompleted(ByVal arg As Object)
            If (Not (Me.DeleteCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent DeleteCompleted(Me, New DeleteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:trisoft.be:WebServices:InfoShare:Publication:2.0/SetMetaData", RequestNamespace:="urn:trisoft.be:WebServices:InfoShare:Publication:2.0", ResponseNamespace:="urn:trisoft.be:WebServices:InfoShare:Publication:2.0", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function SetMetaData(ByRef psAuthContext As String, ByVal psDocId As String, ByRef psVersion As String, ByVal psXMLMetaData As String, ByVal psXMLRequiredCurrentState As String) As String
            Dim results() As Object = Me.Invoke("SetMetaData", New Object() {psAuthContext, psDocId, psVersion, psXMLMetaData, psXMLRequiredCurrentState})
            psAuthContext = CType(results(1),String)
            psVersion = CType(results(2),String)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub SetMetaDataAsync(ByVal psAuthContext As String, ByVal psDocId As String, ByVal psVersion As String, ByVal psXMLMetaData As String, ByVal psXMLRequiredCurrentState As String)
            Me.SetMetaDataAsync(psAuthContext, psDocId, psVersion, psXMLMetaData, psXMLRequiredCurrentState, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SetMetaDataAsync(ByVal psAuthContext As String, ByVal psDocId As String, ByVal psVersion As String, ByVal psXMLMetaData As String, ByVal psXMLRequiredCurrentState As String, ByVal userState As Object)
            If (Me.SetMetaDataOperationCompleted Is Nothing) Then
                Me.SetMetaDataOperationCompleted = AddressOf Me.OnSetMetaDataOperationCompleted
            End If
            Me.InvokeAsync("SetMetaData", New Object() {psAuthContext, psDocId, psVersion, psXMLMetaData, psXMLRequiredCurrentState}, Me.SetMetaDataOperationCompleted, userState)
        End Sub
        
        Private Sub OnSetMetaDataOperationCompleted(ByVal arg As Object)
            If (Not (Me.SetMetaDataCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent SetMetaDataCompleted(Me, New SetMetaDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:trisoft.be:WebServices:InfoShare:Publication:2.0/GetMetaData", RequestNamespace:="urn:trisoft.be:WebServices:InfoShare:Publication:2.0", ResponseNamespace:="urn:trisoft.be:WebServices:InfoShare:Publication:2.0", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetMetaData(ByRef psAuthContext As String, ByVal psDocID As String, ByRef psVersion As String, ByVal psXMLRequestedMetadata As String, ByRef psOutXMLObjList As String) As String
            Dim results() As Object = Me.Invoke("GetMetaData", New Object() {psAuthContext, psDocID, psVersion, psXMLRequestedMetadata, psOutXMLObjList})
            psAuthContext = CType(results(1),String)
            psVersion = CType(results(2),String)
            psOutXMLObjList = CType(results(3),String)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetMetaDataAsync(ByVal psAuthContext As String, ByVal psDocID As String, ByVal psVersion As String, ByVal psXMLRequestedMetadata As String, ByVal psOutXMLObjList As String)
            Me.GetMetaDataAsync(psAuthContext, psDocID, psVersion, psXMLRequestedMetadata, psOutXMLObjList, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetMetaDataAsync(ByVal psAuthContext As String, ByVal psDocID As String, ByVal psVersion As String, ByVal psXMLRequestedMetadata As String, ByVal psOutXMLObjList As String, ByVal userState As Object)
            If (Me.GetMetaDataOperationCompleted Is Nothing) Then
                Me.GetMetaDataOperationCompleted = AddressOf Me.OnGetMetaDataOperationCompleted
            End If
            Me.InvokeAsync("GetMetaData", New Object() {psAuthContext, psDocID, psVersion, psXMLRequestedMetadata, psOutXMLObjList}, Me.GetMetaDataOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetMetaDataOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetMetaDataCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetMetaDataCompleted(Me, New GetMetaDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:trisoft.be:WebServices:InfoShare:Publication:2.0/Find", RequestNamespace:="urn:trisoft.be:WebServices:InfoShare:Publication:2.0", ResponseNamespace:="urn:trisoft.be:WebServices:InfoShare:Publication:2.0", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Find(ByRef psAuthContext As String, ByVal peStatusFilter As eISHStatusgroup, ByVal psXMLMetadataFilter As String, ByVal psXMLRequestedMetadata As String, ByRef psOutXMLObjList As String) As String
            Dim results() As Object = Me.Invoke("Find", New Object() {psAuthContext, peStatusFilter, psXMLMetadataFilter, psXMLRequestedMetadata, psOutXMLObjList})
            psAuthContext = CType(results(1),String)
            psOutXMLObjList = CType(results(2),String)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub FindAsync(ByVal psAuthContext As String, ByVal peStatusFilter As eISHStatusgroup, ByVal psXMLMetadataFilter As String, ByVal psXMLRequestedMetadata As String, ByVal psOutXMLObjList As String)
            Me.FindAsync(psAuthContext, peStatusFilter, psXMLMetadataFilter, psXMLRequestedMetadata, psOutXMLObjList, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub FindAsync(ByVal psAuthContext As String, ByVal peStatusFilter As eISHStatusgroup, ByVal psXMLMetadataFilter As String, ByVal psXMLRequestedMetadata As String, ByVal psOutXMLObjList As String, ByVal userState As Object)
            If (Me.FindOperationCompleted Is Nothing) Then
                Me.FindOperationCompleted = AddressOf Me.OnFindOperationCompleted
            End If
            Me.InvokeAsync("Find", New Object() {psAuthContext, peStatusFilter, psXMLMetadataFilter, psXMLRequestedMetadata, psOutXMLObjList}, Me.FindOperationCompleted, userState)
        End Sub
        
        Private Sub OnFindOperationCompleted(ByVal arg As Object)
            If (Not (Me.FindCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent FindCompleted(Me, New FindCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:trisoft.be:WebServices:InfoShare:Publication:2.0/RetrieveMetaData", RequestNamespace:="urn:trisoft.be:WebServices:InfoShare:Publication:2.0", ResponseNamespace:="urn:trisoft.be:WebServices:InfoShare:Publication:2.0", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function RetrieveMetaData(ByRef psAuthContext As String, ByVal psDocIds As String, ByVal psXMLMetadataFilter As String, ByVal psXMLRequestedMetadata As String, ByRef psOutXMLObjList As String) As String
            Dim results() As Object = Me.Invoke("RetrieveMetaData", New Object() {psAuthContext, psDocIds, psXMLMetadataFilter, psXMLRequestedMetadata, psOutXMLObjList})
            psAuthContext = CType(results(1),String)
            psOutXMLObjList = CType(results(2),String)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub RetrieveMetaDataAsync(ByVal psAuthContext As String, ByVal psDocIds As String, ByVal psXMLMetadataFilter As String, ByVal psXMLRequestedMetadata As String, ByVal psOutXMLObjList As String)
            Me.RetrieveMetaDataAsync(psAuthContext, psDocIds, psXMLMetadataFilter, psXMLRequestedMetadata, psOutXMLObjList, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub RetrieveMetaDataAsync(ByVal psAuthContext As String, ByVal psDocIds As String, ByVal psXMLMetadataFilter As String, ByVal psXMLRequestedMetadata As String, ByVal psOutXMLObjList As String, ByVal userState As Object)
            If (Me.RetrieveMetaDataOperationCompleted Is Nothing) Then
                Me.RetrieveMetaDataOperationCompleted = AddressOf Me.OnRetrieveMetaDataOperationCompleted
            End If
            Me.InvokeAsync("RetrieveMetaData", New Object() {psAuthContext, psDocIds, psXMLMetadataFilter, psXMLRequestedMetadata, psOutXMLObjList}, Me.RetrieveMetaDataOperationCompleted, userState)
        End Sub
        
        Private Sub OnRetrieveMetaDataOperationCompleted(ByVal arg As Object)
            If (Not (Me.RetrieveMetaDataCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent RetrieveMetaDataCompleted(Me, New RetrieveMetaDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:trisoft.be:WebServices:InfoShare:Publication:2.0/IsReleased", RequestNamespace:="urn:trisoft.be:WebServices:InfoShare:Publication:2.0", ResponseNamespace:="urn:trisoft.be:WebServices:InfoShare:Publication:2.0", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function IsReleased(ByRef psAuthContext As String, ByVal psDocId As String, ByVal psVersion As String, ByRef pbOutIsReleased As Boolean) As String
            Dim results() As Object = Me.Invoke("IsReleased", New Object() {psAuthContext, psDocId, psVersion, pbOutIsReleased})
            psAuthContext = CType(results(1),String)
            pbOutIsReleased = CType(results(2),Boolean)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub IsReleasedAsync(ByVal psAuthContext As String, ByVal psDocId As String, ByVal psVersion As String, ByVal pbOutIsReleased As Boolean)
            Me.IsReleasedAsync(psAuthContext, psDocId, psVersion, pbOutIsReleased, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub IsReleasedAsync(ByVal psAuthContext As String, ByVal psDocId As String, ByVal psVersion As String, ByVal pbOutIsReleased As Boolean, ByVal userState As Object)
            If (Me.IsReleasedOperationCompleted Is Nothing) Then
                Me.IsReleasedOperationCompleted = AddressOf Me.OnIsReleasedOperationCompleted
            End If
            Me.InvokeAsync("IsReleased", New Object() {psAuthContext, psDocId, psVersion, pbOutIsReleased}, Me.IsReleasedOperationCompleted, userState)
        End Sub
        
        Private Sub OnIsReleasedOperationCompleted(ByVal arg As Object)
            If (Not (Me.IsReleasedCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent IsReleasedCompleted(Me, New IsReleasedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        Public Shadows Sub CancelAsync(ByVal userState As Object)
            MyBase.CancelAsync(userState)
        End Sub
        
        Private Function IsLocalFileSystemWebService(ByVal url As String) As Boolean
            If ((url Is Nothing)  _
                        OrElse (url Is String.Empty)) Then
                Return false
            End If
            Dim wsUri As System.Uri = New System.Uri(url)
            If ((wsUri.Port >= 1024)  _
                        AndAlso (String.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) = 0)) Then
                Return true
            End If
            Return false
        End Function
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234"),  _
     System.SerializableAttribute(),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn:trisoft.be:WebServices:InfoShare:Publication:2.0")>  _
    Public Enum eISHStatusgroup
        
        '''<remarks/>
        ISHReleasedStates
        
        '''<remarks/>
        ISHReleasedOrDraftStates
        
        '''<remarks/>
        ISHOutOfDateOrReleasedStates
        
        '''<remarks/>
        ISHNoStatusFilter
    End Enum
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub CreateCompletedEventHandler(ByVal sender As Object, ByVal e As CreateCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CreateCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property psAuthContext() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property psDocId() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property psVersion() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(3),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub DeleteCompletedEventHandler(ByVal sender As Object, ByVal e As DeleteCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class DeleteCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property psAuthContext() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub SetMetaDataCompletedEventHandler(ByVal sender As Object, ByVal e As SetMetaDataCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class SetMetaDataCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property psAuthContext() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property psVersion() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub GetMetaDataCompletedEventHandler(ByVal sender As Object, ByVal e As GetMetaDataCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetMetaDataCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property psAuthContext() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property psVersion() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property psOutXMLObjList() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(3),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub FindCompletedEventHandler(ByVal sender As Object, ByVal e As FindCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class FindCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property psAuthContext() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property psOutXMLObjList() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub RetrieveMetaDataCompletedEventHandler(ByVal sender As Object, ByVal e As RetrieveMetaDataCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class RetrieveMetaDataCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property psAuthContext() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property psOutXMLObjList() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub IsReleasedCompletedEventHandler(ByVal sender As Object, ByVal e As IsReleasedCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class IsReleasedCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property psAuthContext() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property pbOutIsReleased() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),Boolean)
            End Get
        End Property
    End Class
End Namespace
