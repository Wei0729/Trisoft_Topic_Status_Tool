'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.34209
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports System
Imports System.ComponentModel
Imports System.Diagnostics
Imports System.Web.Services
Imports System.Web.Services.Protocols
Imports System.Xml.Serialization

'
'This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.34209.
'
Namespace DocumentObj25
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Web.Services.WebServiceBindingAttribute(Name:="DocumentObj25Soap", [Namespace]:="urn:trisoft.be:WebServices:InfoShare:DocumentObj:2.5")>  _
    Partial Public Class DocumentObj25
        Inherits System.Web.Services.Protocols.SoapHttpClientProtocol
        
        Private GetMetaDataByIshLngRefOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetMetaDataOperationCompleted As System.Threading.SendOrPostCallback
        
        Private FindOperationCompleted As System.Threading.SendOrPostCallback
        
        Private RetrieveMetadataOperationCompleted As System.Threading.SendOrPostCallback
        
        Private RetrieveMetadataByIshLngRefsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private RetrieveVersionMetadataOperationCompleted As System.Threading.SendOrPostCallback
        
        Private RetrieveLanguageMetadataOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetDataObjectInfoByIshLngRefOperationCompleted As System.Threading.SendOrPostCallback
        
        Private RetrieveDataObjectInfoByIshLngRefsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private FolderLocationOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetParentsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetParentsByIshLngRefOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetChildrenOperationCompleted As System.Threading.SendOrPostCallback
        
        Private useDefaultCredentialsSetExplicitly As Boolean
        
        '''<remarks/>
        Public Sub New()
            MyBase.New
            Me.Url = Global.Esri_Trisoft_TopicStatus_Tool.My.MySettings.Default.Esri_Trisoft_TopicStatus_Tool_DocumentObj25_DocumentObj25
            If (Me.IsLocalFileSystemWebService(Me.Url) = true) Then
                Me.UseDefaultCredentials = true
                Me.useDefaultCredentialsSetExplicitly = false
            Else
                Me.useDefaultCredentialsSetExplicitly = true
            End If
        End Sub
        
        Public Shadows Property Url() As String
            Get
                Return MyBase.Url
            End Get
            Set
                If (((Me.IsLocalFileSystemWebService(MyBase.Url) = true)  _
                            AndAlso (Me.useDefaultCredentialsSetExplicitly = false))  _
                            AndAlso (Me.IsLocalFileSystemWebService(value) = false)) Then
                    MyBase.UseDefaultCredentials = false
                End If
                MyBase.Url = value
            End Set
        End Property
        
        Public Shadows Property UseDefaultCredentials() As Boolean
            Get
                Return MyBase.UseDefaultCredentials
            End Get
            Set
                MyBase.UseDefaultCredentials = value
                Me.useDefaultCredentialsSetExplicitly = true
            End Set
        End Property
        
        '''<remarks/>
        Public Event GetMetaDataByIshLngRefCompleted As GetMetaDataByIshLngRefCompletedEventHandler
        
        '''<remarks/>
        Public Event GetMetaDataCompleted As GetMetaDataCompletedEventHandler
        
        '''<remarks/>
        Public Event FindCompleted As FindCompletedEventHandler
        
        '''<remarks/>
        Public Event RetrieveMetadataCompleted As RetrieveMetadataCompletedEventHandler
        
        '''<remarks/>
        Public Event RetrieveMetadataByIshLngRefsCompleted As RetrieveMetadataByIshLngRefsCompletedEventHandler
        
        '''<remarks/>
        Public Event RetrieveVersionMetadataCompleted As RetrieveVersionMetadataCompletedEventHandler
        
        '''<remarks/>
        Public Event RetrieveLanguageMetadataCompleted As RetrieveLanguageMetadataCompletedEventHandler
        
        '''<remarks/>
        Public Event GetDataObjectInfoByIshLngRefCompleted As GetDataObjectInfoByIshLngRefCompletedEventHandler
        
        '''<remarks/>
        Public Event RetrieveDataObjectInfoByIshLngRefsCompleted As RetrieveDataObjectInfoByIshLngRefsCompletedEventHandler
        
        '''<remarks/>
        Public Event FolderLocationCompleted As FolderLocationCompletedEventHandler
        
        '''<remarks/>
        Public Event GetParentsCompleted As GetParentsCompletedEventHandler
        
        '''<remarks/>
        Public Event GetParentsByIshLngRefCompleted As GetParentsByIshLngRefCompletedEventHandler
        
        '''<remarks/>
        Public Event GetChildrenCompleted As GetChildrenCompletedEventHandler
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:trisoft.be:WebServices:InfoShare:DocumentObj:2.5/GetMetaDataByIshLngRef", RequestNamespace:="urn:trisoft.be:WebServices:InfoShare:DocumentObj:2.5", ResponseNamespace:="urn:trisoft.be:WebServices:InfoShare:DocumentObj:2.5", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetMetaDataByIshLngRef(ByRef psAuthContext As String, ByVal plLngRef As Long, ByVal psXMLRequestedMetaData As String, ByRef psOutXMLObjList As String) As String
            Dim results() As Object = Me.Invoke("GetMetaDataByIshLngRef", New Object() {psAuthContext, plLngRef, psXMLRequestedMetaData, psOutXMLObjList})
            psAuthContext = CType(results(1),String)
            psOutXMLObjList = CType(results(2),String)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetMetaDataByIshLngRefAsync(ByVal psAuthContext As String, ByVal plLngRef As Long, ByVal psXMLRequestedMetaData As String, ByVal psOutXMLObjList As String)
            Me.GetMetaDataByIshLngRefAsync(psAuthContext, plLngRef, psXMLRequestedMetaData, psOutXMLObjList, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetMetaDataByIshLngRefAsync(ByVal psAuthContext As String, ByVal plLngRef As Long, ByVal psXMLRequestedMetaData As String, ByVal psOutXMLObjList As String, ByVal userState As Object)
            If (Me.GetMetaDataByIshLngRefOperationCompleted Is Nothing) Then
                Me.GetMetaDataByIshLngRefOperationCompleted = AddressOf Me.OnGetMetaDataByIshLngRefOperationCompleted
            End If
            Me.InvokeAsync("GetMetaDataByIshLngRef", New Object() {psAuthContext, plLngRef, psXMLRequestedMetaData, psOutXMLObjList}, Me.GetMetaDataByIshLngRefOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetMetaDataByIshLngRefOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetMetaDataByIshLngRefCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetMetaDataByIshLngRefCompleted(Me, New GetMetaDataByIshLngRefCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:trisoft.be:WebServices:InfoShare:DocumentObj:2.5/GetMetaData", RequestNamespace:="urn:trisoft.be:WebServices:InfoShare:DocumentObj:2.5", ResponseNamespace:="urn:trisoft.be:WebServices:InfoShare:DocumentObj:2.5", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetMetaData(ByRef psAuthContext As String, ByVal psLogicalId As String, ByRef psVersion As String, ByVal psLanguage As String, ByVal psResolution As String, ByVal psXMLRequestedMetaData As String, ByRef psOutXMLObjList As String) As String
            Dim results() As Object = Me.Invoke("GetMetaData", New Object() {psAuthContext, psLogicalId, psVersion, psLanguage, psResolution, psXMLRequestedMetaData, psOutXMLObjList})
            psAuthContext = CType(results(1),String)
            psVersion = CType(results(2),String)
            psOutXMLObjList = CType(results(3),String)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetMetaDataAsync(ByVal psAuthContext As String, ByVal psLogicalId As String, ByVal psVersion As String, ByVal psLanguage As String, ByVal psResolution As String, ByVal psXMLRequestedMetaData As String, ByVal psOutXMLObjList As String)
            Me.GetMetaDataAsync(psAuthContext, psLogicalId, psVersion, psLanguage, psResolution, psXMLRequestedMetaData, psOutXMLObjList, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetMetaDataAsync(ByVal psAuthContext As String, ByVal psLogicalId As String, ByVal psVersion As String, ByVal psLanguage As String, ByVal psResolution As String, ByVal psXMLRequestedMetaData As String, ByVal psOutXMLObjList As String, ByVal userState As Object)
            If (Me.GetMetaDataOperationCompleted Is Nothing) Then
                Me.GetMetaDataOperationCompleted = AddressOf Me.OnGetMetaDataOperationCompleted
            End If
            Me.InvokeAsync("GetMetaData", New Object() {psAuthContext, psLogicalId, psVersion, psLanguage, psResolution, psXMLRequestedMetaData, psOutXMLObjList}, Me.GetMetaDataOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetMetaDataOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetMetaDataCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetMetaDataCompleted(Me, New GetMetaDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:trisoft.be:WebServices:InfoShare:DocumentObj:2.5/Find", RequestNamespace:="urn:trisoft.be:WebServices:InfoShare:DocumentObj:2.5", ResponseNamespace:="urn:trisoft.be:WebServices:InfoShare:DocumentObj:2.5", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Find(ByRef psAuthContext As String, ByVal psIshTypeFilter As String, ByVal peStatusFilter As eISHStatusgroup, ByVal psXMLMetadataFilter As String, ByVal psXMLRequestedMetadata As String, ByRef psOutXMLObjList As String) As String
            Dim results() As Object = Me.Invoke("Find", New Object() {psAuthContext, psIshTypeFilter, peStatusFilter, psXMLMetadataFilter, psXMLRequestedMetadata, psOutXMLObjList})
            psAuthContext = CType(results(1),String)
            psOutXMLObjList = CType(results(2),String)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub FindAsync(ByVal psAuthContext As String, ByVal psIshTypeFilter As String, ByVal peStatusFilter As eISHStatusgroup, ByVal psXMLMetadataFilter As String, ByVal psXMLRequestedMetadata As String, ByVal psOutXMLObjList As String)
            Me.FindAsync(psAuthContext, psIshTypeFilter, peStatusFilter, psXMLMetadataFilter, psXMLRequestedMetadata, psOutXMLObjList, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub FindAsync(ByVal psAuthContext As String, ByVal psIshTypeFilter As String, ByVal peStatusFilter As eISHStatusgroup, ByVal psXMLMetadataFilter As String, ByVal psXMLRequestedMetadata As String, ByVal psOutXMLObjList As String, ByVal userState As Object)
            If (Me.FindOperationCompleted Is Nothing) Then
                Me.FindOperationCompleted = AddressOf Me.OnFindOperationCompleted
            End If
            Me.InvokeAsync("Find", New Object() {psAuthContext, psIshTypeFilter, peStatusFilter, psXMLMetadataFilter, psXMLRequestedMetadata, psOutXMLObjList}, Me.FindOperationCompleted, userState)
        End Sub
        
        Private Sub OnFindOperationCompleted(ByVal arg As Object)
            If (Not (Me.FindCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent FindCompleted(Me, New FindCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:trisoft.be:WebServices:InfoShare:DocumentObj:2.5/RetrieveMetadata", RequestNamespace:="urn:trisoft.be:WebServices:InfoShare:DocumentObj:2.5", ResponseNamespace:="urn:trisoft.be:WebServices:InfoShare:DocumentObj:2.5", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function RetrieveMetadata(ByRef psAuthContext As String, ByVal pasLogicalIds() As String, ByVal peStatusFilter As eISHStatusgroup, ByVal psXMLMetadataFilter As String, ByVal psXMLRequestedMetadata As String, ByRef psOutXMLObjList As String) As String
            Dim results() As Object = Me.Invoke("RetrieveMetadata", New Object() {psAuthContext, pasLogicalIds, peStatusFilter, psXMLMetadataFilter, psXMLRequestedMetadata, psOutXMLObjList})
            psAuthContext = CType(results(1),String)
            psOutXMLObjList = CType(results(2),String)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub RetrieveMetadataAsync(ByVal psAuthContext As String, ByVal pasLogicalIds() As String, ByVal peStatusFilter As eISHStatusgroup, ByVal psXMLMetadataFilter As String, ByVal psXMLRequestedMetadata As String, ByVal psOutXMLObjList As String)
            Me.RetrieveMetadataAsync(psAuthContext, pasLogicalIds, peStatusFilter, psXMLMetadataFilter, psXMLRequestedMetadata, psOutXMLObjList, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub RetrieveMetadataAsync(ByVal psAuthContext As String, ByVal pasLogicalIds() As String, ByVal peStatusFilter As eISHStatusgroup, ByVal psXMLMetadataFilter As String, ByVal psXMLRequestedMetadata As String, ByVal psOutXMLObjList As String, ByVal userState As Object)
            If (Me.RetrieveMetadataOperationCompleted Is Nothing) Then
                Me.RetrieveMetadataOperationCompleted = AddressOf Me.OnRetrieveMetadataOperationCompleted
            End If
            Me.InvokeAsync("RetrieveMetadata", New Object() {psAuthContext, pasLogicalIds, peStatusFilter, psXMLMetadataFilter, psXMLRequestedMetadata, psOutXMLObjList}, Me.RetrieveMetadataOperationCompleted, userState)
        End Sub
        
        Private Sub OnRetrieveMetadataOperationCompleted(ByVal arg As Object)
            If (Not (Me.RetrieveMetadataCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent RetrieveMetadataCompleted(Me, New RetrieveMetadataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:trisoft.be:WebServices:InfoShare:DocumentObj:2.5/RetrieveMetadataByIshLngRefs"& _ 
            "", RequestNamespace:="urn:trisoft.be:WebServices:InfoShare:DocumentObj:2.5", ResponseNamespace:="urn:trisoft.be:WebServices:InfoShare:DocumentObj:2.5", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function RetrieveMetadataByIshLngRefs(ByRef psAuthContext As String, ByVal palLngRefs() As Long, ByVal psXMLRequestedMetadata As String, ByRef psOutXMLObjList As String) As String
            Dim results() As Object = Me.Invoke("RetrieveMetadataByIshLngRefs", New Object() {psAuthContext, palLngRefs, psXMLRequestedMetadata, psOutXMLObjList})
            psAuthContext = CType(results(1),String)
            psOutXMLObjList = CType(results(2),String)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub RetrieveMetadataByIshLngRefsAsync(ByVal psAuthContext As String, ByVal palLngRefs() As Long, ByVal psXMLRequestedMetadata As String, ByVal psOutXMLObjList As String)
            Me.RetrieveMetadataByIshLngRefsAsync(psAuthContext, palLngRefs, psXMLRequestedMetadata, psOutXMLObjList, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub RetrieveMetadataByIshLngRefsAsync(ByVal psAuthContext As String, ByVal palLngRefs() As Long, ByVal psXMLRequestedMetadata As String, ByVal psOutXMLObjList As String, ByVal userState As Object)
            If (Me.RetrieveMetadataByIshLngRefsOperationCompleted Is Nothing) Then
                Me.RetrieveMetadataByIshLngRefsOperationCompleted = AddressOf Me.OnRetrieveMetadataByIshLngRefsOperationCompleted
            End If
            Me.InvokeAsync("RetrieveMetadataByIshLngRefs", New Object() {psAuthContext, palLngRefs, psXMLRequestedMetadata, psOutXMLObjList}, Me.RetrieveMetadataByIshLngRefsOperationCompleted, userState)
        End Sub
        
        Private Sub OnRetrieveMetadataByIshLngRefsOperationCompleted(ByVal arg As Object)
            If (Not (Me.RetrieveMetadataByIshLngRefsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent RetrieveMetadataByIshLngRefsCompleted(Me, New RetrieveMetadataByIshLngRefsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:trisoft.be:WebServices:InfoShare:DocumentObj:2.5/RetrieveVersionMetadata", RequestNamespace:="urn:trisoft.be:WebServices:InfoShare:DocumentObj:2.5", ResponseNamespace:="urn:trisoft.be:WebServices:InfoShare:DocumentObj:2.5", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function RetrieveVersionMetadata(ByRef psAuthContext As String, ByVal pasLogicalIds() As String, ByVal psVersion As String, ByVal psXMLRequestedMetadata As String, ByRef psOutXMLObjList As String) As String
            Dim results() As Object = Me.Invoke("RetrieveVersionMetadata", New Object() {psAuthContext, pasLogicalIds, psVersion, psXMLRequestedMetadata, psOutXMLObjList})
            psAuthContext = CType(results(1),String)
            psOutXMLObjList = CType(results(2),String)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub RetrieveVersionMetadataAsync(ByVal psAuthContext As String, ByVal pasLogicalIds() As String, ByVal psVersion As String, ByVal psXMLRequestedMetadata As String, ByVal psOutXMLObjList As String)
            Me.RetrieveVersionMetadataAsync(psAuthContext, pasLogicalIds, psVersion, psXMLRequestedMetadata, psOutXMLObjList, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub RetrieveVersionMetadataAsync(ByVal psAuthContext As String, ByVal pasLogicalIds() As String, ByVal psVersion As String, ByVal psXMLRequestedMetadata As String, ByVal psOutXMLObjList As String, ByVal userState As Object)
            If (Me.RetrieveVersionMetadataOperationCompleted Is Nothing) Then
                Me.RetrieveVersionMetadataOperationCompleted = AddressOf Me.OnRetrieveVersionMetadataOperationCompleted
            End If
            Me.InvokeAsync("RetrieveVersionMetadata", New Object() {psAuthContext, pasLogicalIds, psVersion, psXMLRequestedMetadata, psOutXMLObjList}, Me.RetrieveVersionMetadataOperationCompleted, userState)
        End Sub
        
        Private Sub OnRetrieveVersionMetadataOperationCompleted(ByVal arg As Object)
            If (Not (Me.RetrieveVersionMetadataCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent RetrieveVersionMetadataCompleted(Me, New RetrieveVersionMetadataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:trisoft.be:WebServices:InfoShare:DocumentObj:2.5/RetrieveLanguageMetadata", RequestNamespace:="urn:trisoft.be:WebServices:InfoShare:DocumentObj:2.5", ResponseNamespace:="urn:trisoft.be:WebServices:InfoShare:DocumentObj:2.5", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function RetrieveLanguageMetadata(ByRef psAuthContext As String, ByVal pasLogicalIds() As String, ByVal psVersion As String, ByVal pasLanguages() As String, ByVal pasResolutions() As String, ByVal peStatusFilter As eISHStatusgroup, ByVal psXMLRequestedMetadata As String, ByRef psOutXMLObjList As String) As String
            Dim results() As Object = Me.Invoke("RetrieveLanguageMetadata", New Object() {psAuthContext, pasLogicalIds, psVersion, pasLanguages, pasResolutions, peStatusFilter, psXMLRequestedMetadata, psOutXMLObjList})
            psAuthContext = CType(results(1),String)
            psOutXMLObjList = CType(results(2),String)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub RetrieveLanguageMetadataAsync(ByVal psAuthContext As String, ByVal pasLogicalIds() As String, ByVal psVersion As String, ByVal pasLanguages() As String, ByVal pasResolutions() As String, ByVal peStatusFilter As eISHStatusgroup, ByVal psXMLRequestedMetadata As String, ByVal psOutXMLObjList As String)
            Me.RetrieveLanguageMetadataAsync(psAuthContext, pasLogicalIds, psVersion, pasLanguages, pasResolutions, peStatusFilter, psXMLRequestedMetadata, psOutXMLObjList, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub RetrieveLanguageMetadataAsync(ByVal psAuthContext As String, ByVal pasLogicalIds() As String, ByVal psVersion As String, ByVal pasLanguages() As String, ByVal pasResolutions() As String, ByVal peStatusFilter As eISHStatusgroup, ByVal psXMLRequestedMetadata As String, ByVal psOutXMLObjList As String, ByVal userState As Object)
            If (Me.RetrieveLanguageMetadataOperationCompleted Is Nothing) Then
                Me.RetrieveLanguageMetadataOperationCompleted = AddressOf Me.OnRetrieveLanguageMetadataOperationCompleted
            End If
            Me.InvokeAsync("RetrieveLanguageMetadata", New Object() {psAuthContext, pasLogicalIds, psVersion, pasLanguages, pasResolutions, peStatusFilter, psXMLRequestedMetadata, psOutXMLObjList}, Me.RetrieveLanguageMetadataOperationCompleted, userState)
        End Sub
        
        Private Sub OnRetrieveLanguageMetadataOperationCompleted(ByVal arg As Object)
            If (Not (Me.RetrieveLanguageMetadataCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent RetrieveLanguageMetadataCompleted(Me, New RetrieveLanguageMetadataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:trisoft.be:WebServices:InfoShare:DocumentObj:2.5/GetDataObjectInfoByIshLngRef"& _ 
            "", RequestNamespace:="urn:trisoft.be:WebServices:InfoShare:DocumentObj:2.5", ResponseNamespace:="urn:trisoft.be:WebServices:InfoShare:DocumentObj:2.5", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetDataObjectInfoByIshLngRef(ByRef psAuthContext As String, ByVal plLngRef As Long, ByRef psOutXMLIshDataObjects As String) As String
            Dim results() As Object = Me.Invoke("GetDataObjectInfoByIshLngRef", New Object() {psAuthContext, plLngRef, psOutXMLIshDataObjects})
            psAuthContext = CType(results(1),String)
            psOutXMLIshDataObjects = CType(results(2),String)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetDataObjectInfoByIshLngRefAsync(ByVal psAuthContext As String, ByVal plLngRef As Long, ByVal psOutXMLIshDataObjects As String)
            Me.GetDataObjectInfoByIshLngRefAsync(psAuthContext, plLngRef, psOutXMLIshDataObjects, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetDataObjectInfoByIshLngRefAsync(ByVal psAuthContext As String, ByVal plLngRef As Long, ByVal psOutXMLIshDataObjects As String, ByVal userState As Object)
            If (Me.GetDataObjectInfoByIshLngRefOperationCompleted Is Nothing) Then
                Me.GetDataObjectInfoByIshLngRefOperationCompleted = AddressOf Me.OnGetDataObjectInfoByIshLngRefOperationCompleted
            End If
            Me.InvokeAsync("GetDataObjectInfoByIshLngRef", New Object() {psAuthContext, plLngRef, psOutXMLIshDataObjects}, Me.GetDataObjectInfoByIshLngRefOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetDataObjectInfoByIshLngRefOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetDataObjectInfoByIshLngRefCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetDataObjectInfoByIshLngRefCompleted(Me, New GetDataObjectInfoByIshLngRefCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:trisoft.be:WebServices:InfoShare:DocumentObj:2.5/RetrieveDataObjectInfoByIshL"& _ 
            "ngRefs", RequestNamespace:="urn:trisoft.be:WebServices:InfoShare:DocumentObj:2.5", ResponseNamespace:="urn:trisoft.be:WebServices:InfoShare:DocumentObj:2.5", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function RetrieveDataObjectInfoByIshLngRefs(ByRef psAuthContext As String, ByVal palLngRefs() As Long, ByRef psOutXMLIshDataObjects As String) As String
            Dim results() As Object = Me.Invoke("RetrieveDataObjectInfoByIshLngRefs", New Object() {psAuthContext, palLngRefs, psOutXMLIshDataObjects})
            psAuthContext = CType(results(1),String)
            psOutXMLIshDataObjects = CType(results(2),String)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub RetrieveDataObjectInfoByIshLngRefsAsync(ByVal psAuthContext As String, ByVal palLngRefs() As Long, ByVal psOutXMLIshDataObjects As String)
            Me.RetrieveDataObjectInfoByIshLngRefsAsync(psAuthContext, palLngRefs, psOutXMLIshDataObjects, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub RetrieveDataObjectInfoByIshLngRefsAsync(ByVal psAuthContext As String, ByVal palLngRefs() As Long, ByVal psOutXMLIshDataObjects As String, ByVal userState As Object)
            If (Me.RetrieveDataObjectInfoByIshLngRefsOperationCompleted Is Nothing) Then
                Me.RetrieveDataObjectInfoByIshLngRefsOperationCompleted = AddressOf Me.OnRetrieveDataObjectInfoByIshLngRefsOperationCompleted
            End If
            Me.InvokeAsync("RetrieveDataObjectInfoByIshLngRefs", New Object() {psAuthContext, palLngRefs, psOutXMLIshDataObjects}, Me.RetrieveDataObjectInfoByIshLngRefsOperationCompleted, userState)
        End Sub
        
        Private Sub OnRetrieveDataObjectInfoByIshLngRefsOperationCompleted(ByVal arg As Object)
            If (Not (Me.RetrieveDataObjectInfoByIshLngRefsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent RetrieveDataObjectInfoByIshLngRefsCompleted(Me, New RetrieveDataObjectInfoByIshLngRefsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:trisoft.be:WebServices:InfoShare:DocumentObj:2.5/FolderLocation", RequestNamespace:="urn:trisoft.be:WebServices:InfoShare:DocumentObj:2.5", ResponseNamespace:="urn:trisoft.be:WebServices:InfoShare:DocumentObj:2.5", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function FolderLocation(ByRef psAuthContext As String, ByVal psLogicalId As String, ByRef peOutBaseFolder As eBaseFolder, ByRef pasOutFolderPath() As String, ByRef palOutFolderRefs() As Long) As String
            Dim results() As Object = Me.Invoke("FolderLocation", New Object() {psAuthContext, psLogicalId, peOutBaseFolder, pasOutFolderPath, palOutFolderRefs})
            psAuthContext = CType(results(1),String)
            peOutBaseFolder = CType(results(2),eBaseFolder)
            pasOutFolderPath = CType(results(3),String())
            palOutFolderRefs = CType(results(4),Long())
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub FolderLocationAsync(ByVal psAuthContext As String, ByVal psLogicalId As String, ByVal peOutBaseFolder As eBaseFolder, ByVal pasOutFolderPath() As String, ByVal palOutFolderRefs() As Long)
            Me.FolderLocationAsync(psAuthContext, psLogicalId, peOutBaseFolder, pasOutFolderPath, palOutFolderRefs, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub FolderLocationAsync(ByVal psAuthContext As String, ByVal psLogicalId As String, ByVal peOutBaseFolder As eBaseFolder, ByVal pasOutFolderPath() As String, ByVal palOutFolderRefs() As Long, ByVal userState As Object)
            If (Me.FolderLocationOperationCompleted Is Nothing) Then
                Me.FolderLocationOperationCompleted = AddressOf Me.OnFolderLocationOperationCompleted
            End If
            Me.InvokeAsync("FolderLocation", New Object() {psAuthContext, psLogicalId, peOutBaseFolder, pasOutFolderPath, palOutFolderRefs}, Me.FolderLocationOperationCompleted, userState)
        End Sub
        
        Private Sub OnFolderLocationOperationCompleted(ByVal arg As Object)
            If (Not (Me.FolderLocationCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent FolderLocationCompleted(Me, New FolderLocationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:trisoft.be:WebServices:InfoShare:DocumentObj:2.5/GetParents", RequestNamespace:="urn:trisoft.be:WebServices:InfoShare:DocumentObj:2.5", ResponseNamespace:="urn:trisoft.be:WebServices:InfoShare:DocumentObj:2.5", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetParents(ByRef psAuthContext As String, ByVal psLogicalId As String, ByVal peLinkType As eLinkType, ByRef psOutXMLObjList As String) As String
            Dim results() As Object = Me.Invoke("GetParents", New Object() {psAuthContext, psLogicalId, peLinkType, psOutXMLObjList})
            psAuthContext = CType(results(1),String)
            psOutXMLObjList = CType(results(2),String)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetParentsAsync(ByVal psAuthContext As String, ByVal psLogicalId As String, ByVal peLinkType As eLinkType, ByVal psOutXMLObjList As String)
            Me.GetParentsAsync(psAuthContext, psLogicalId, peLinkType, psOutXMLObjList, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetParentsAsync(ByVal psAuthContext As String, ByVal psLogicalId As String, ByVal peLinkType As eLinkType, ByVal psOutXMLObjList As String, ByVal userState As Object)
            If (Me.GetParentsOperationCompleted Is Nothing) Then
                Me.GetParentsOperationCompleted = AddressOf Me.OnGetParentsOperationCompleted
            End If
            Me.InvokeAsync("GetParents", New Object() {psAuthContext, psLogicalId, peLinkType, psOutXMLObjList}, Me.GetParentsOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetParentsOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetParentsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetParentsCompleted(Me, New GetParentsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:trisoft.be:WebServices:InfoShare:DocumentObj:2.5/GetParentsByIshLngRef", RequestNamespace:="urn:trisoft.be:WebServices:InfoShare:DocumentObj:2.5", ResponseNamespace:="urn:trisoft.be:WebServices:InfoShare:DocumentObj:2.5", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetParentsByIshLngRef(ByRef psAuthContext As String, ByVal plLngRef As Long, ByVal peLinkType As eLinkType, ByRef psOutXMLObjList As String) As String
            Dim results() As Object = Me.Invoke("GetParentsByIshLngRef", New Object() {psAuthContext, plLngRef, peLinkType, psOutXMLObjList})
            psAuthContext = CType(results(1),String)
            psOutXMLObjList = CType(results(2),String)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetParentsByIshLngRefAsync(ByVal psAuthContext As String, ByVal plLngRef As Long, ByVal peLinkType As eLinkType, ByVal psOutXMLObjList As String)
            Me.GetParentsByIshLngRefAsync(psAuthContext, plLngRef, peLinkType, psOutXMLObjList, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetParentsByIshLngRefAsync(ByVal psAuthContext As String, ByVal plLngRef As Long, ByVal peLinkType As eLinkType, ByVal psOutXMLObjList As String, ByVal userState As Object)
            If (Me.GetParentsByIshLngRefOperationCompleted Is Nothing) Then
                Me.GetParentsByIshLngRefOperationCompleted = AddressOf Me.OnGetParentsByIshLngRefOperationCompleted
            End If
            Me.InvokeAsync("GetParentsByIshLngRef", New Object() {psAuthContext, plLngRef, peLinkType, psOutXMLObjList}, Me.GetParentsByIshLngRefOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetParentsByIshLngRefOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetParentsByIshLngRefCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetParentsByIshLngRefCompleted(Me, New GetParentsByIshLngRefCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:trisoft.be:WebServices:InfoShare:DocumentObj:2.5/GetChildren", RequestNamespace:="urn:trisoft.be:WebServices:InfoShare:DocumentObj:2.5", ResponseNamespace:="urn:trisoft.be:WebServices:InfoShare:DocumentObj:2.5", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetChildren(ByRef psAuthContext As String, ByVal plLngRef As Long, ByVal peLinkType As eLinkType, ByRef pasOutLogicalIds() As String) As String
            Dim results() As Object = Me.Invoke("GetChildren", New Object() {psAuthContext, plLngRef, peLinkType, pasOutLogicalIds})
            psAuthContext = CType(results(1),String)
            pasOutLogicalIds = CType(results(2),String())
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetChildrenAsync(ByVal psAuthContext As String, ByVal plLngRef As Long, ByVal peLinkType As eLinkType, ByVal pasOutLogicalIds() As String)
            Me.GetChildrenAsync(psAuthContext, plLngRef, peLinkType, pasOutLogicalIds, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetChildrenAsync(ByVal psAuthContext As String, ByVal plLngRef As Long, ByVal peLinkType As eLinkType, ByVal pasOutLogicalIds() As String, ByVal userState As Object)
            If (Me.GetChildrenOperationCompleted Is Nothing) Then
                Me.GetChildrenOperationCompleted = AddressOf Me.OnGetChildrenOperationCompleted
            End If
            Me.InvokeAsync("GetChildren", New Object() {psAuthContext, plLngRef, peLinkType, pasOutLogicalIds}, Me.GetChildrenOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetChildrenOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetChildrenCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetChildrenCompleted(Me, New GetChildrenCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        Public Shadows Sub CancelAsync(ByVal userState As Object)
            MyBase.CancelAsync(userState)
        End Sub
        
        Private Function IsLocalFileSystemWebService(ByVal url As String) As Boolean
            If ((url Is Nothing)  _
                        OrElse (url Is String.Empty)) Then
                Return false
            End If
            Dim wsUri As System.Uri = New System.Uri(url)
            If ((wsUri.Port >= 1024)  _
                        AndAlso (String.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) = 0)) Then
                Return true
            End If
            Return false
        End Function
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234"),  _
     System.SerializableAttribute(),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn:trisoft.be:WebServices:InfoShare:DocumentObj:2.5")>  _
    Public Enum eISHStatusgroup
        
        '''<remarks/>
        ISHReleasedStates
        
        '''<remarks/>
        ISHReleasedOrDraftStates
        
        '''<remarks/>
        ISHOutOfDateOrReleasedStates
        
        '''<remarks/>
        ISHNoStatusFilter
    End Enum
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234"),  _
     System.SerializableAttribute(),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn:trisoft.be:WebServices:InfoShare:DocumentObj:2.5")>  _
    Public Enum eBaseFolder
        
        '''<remarks/>
        Data
        
        '''<remarks/>
        System
        
        '''<remarks/>
        Favorites
        
        '''<remarks/>
        EditorTemplate
    End Enum
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234"),  _
     System.SerializableAttribute(),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn:trisoft.be:WebServices:InfoShare:DocumentObj:2.5")>  _
    Public Enum eLinkType
        
        '''<remarks/>
        ContentLink
        
        '''<remarks/>
        HyperLink
        
        '''<remarks/>
        All
    End Enum
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub GetMetaDataByIshLngRefCompletedEventHandler(ByVal sender As Object, ByVal e As GetMetaDataByIshLngRefCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetMetaDataByIshLngRefCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property psAuthContext() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property psOutXMLObjList() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub GetMetaDataCompletedEventHandler(ByVal sender As Object, ByVal e As GetMetaDataCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetMetaDataCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property psAuthContext() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property psVersion() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property psOutXMLObjList() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(3),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub FindCompletedEventHandler(ByVal sender As Object, ByVal e As FindCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class FindCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property psAuthContext() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property psOutXMLObjList() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub RetrieveMetadataCompletedEventHandler(ByVal sender As Object, ByVal e As RetrieveMetadataCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class RetrieveMetadataCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property psAuthContext() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property psOutXMLObjList() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub RetrieveMetadataByIshLngRefsCompletedEventHandler(ByVal sender As Object, ByVal e As RetrieveMetadataByIshLngRefsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class RetrieveMetadataByIshLngRefsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property psAuthContext() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property psOutXMLObjList() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub RetrieveVersionMetadataCompletedEventHandler(ByVal sender As Object, ByVal e As RetrieveVersionMetadataCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class RetrieveVersionMetadataCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property psAuthContext() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property psOutXMLObjList() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub RetrieveLanguageMetadataCompletedEventHandler(ByVal sender As Object, ByVal e As RetrieveLanguageMetadataCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class RetrieveLanguageMetadataCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property psAuthContext() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property psOutXMLObjList() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub GetDataObjectInfoByIshLngRefCompletedEventHandler(ByVal sender As Object, ByVal e As GetDataObjectInfoByIshLngRefCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetDataObjectInfoByIshLngRefCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property psAuthContext() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property psOutXMLIshDataObjects() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub RetrieveDataObjectInfoByIshLngRefsCompletedEventHandler(ByVal sender As Object, ByVal e As RetrieveDataObjectInfoByIshLngRefsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class RetrieveDataObjectInfoByIshLngRefsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property psAuthContext() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property psOutXMLIshDataObjects() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub FolderLocationCompletedEventHandler(ByVal sender As Object, ByVal e As FolderLocationCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class FolderLocationCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property psAuthContext() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property peOutBaseFolder() As eBaseFolder
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),eBaseFolder)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property pasOutFolderPath() As String()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(3),String())
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property palOutFolderRefs() As Long()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(4),Long())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub GetParentsCompletedEventHandler(ByVal sender As Object, ByVal e As GetParentsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetParentsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property psAuthContext() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property psOutXMLObjList() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub GetParentsByIshLngRefCompletedEventHandler(ByVal sender As Object, ByVal e As GetParentsByIshLngRefCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetParentsByIshLngRefCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property psAuthContext() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property psOutXMLObjList() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub GetChildrenCompletedEventHandler(ByVal sender As Object, ByVal e As GetChildrenCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetChildrenCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property psAuthContext() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property pasOutLogicalIds() As String()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String())
            End Get
        End Property
    End Class
End Namespace
